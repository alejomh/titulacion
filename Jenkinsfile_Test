pipeline {
    agent any

    environment {
        IMAGE_NAME = 'edugpt'
        IMAGE_TAG = '002'
        DOCKER_HUB_USER = 'alejo88'
        ENVIRONMENT = 'test'
    }

    stages {
        stage('Source') {
            steps {
                git 'https://github.com/alejomh88/titulacion.git'
            }
        }
        stage('Unit Test') {
            steps {
                echo 'Unit Test stage!'
                sh 'mvn test'
            }
        }

        stage('Integration Test') {
            steps {
                echo 'Integration Test stage!'
                sh 'mvn verify'
            }
        }
        // stage('Sonarqube Scan') {
        //     steps {
        //         echo 'Sonarqube Scan stage!'
        //         withSonarQubeEnv(installationName: 'sonarqubetest') {
        //             sh 'mvn clean package sonar:sonar'
        //         }
        //     }
        //}

        stage('Build') {
            steps {
                echo 'Building stage!'
                sh 'mvn clean install'
            }
        }
        stage('Docker image build and push') {
            steps {
                script {
                    withDockerServer([uri: 'tcp://172.17.0.1:2375']) {
                        withDockerRegistry(credentialsId: 'dockerHubCredentials', url: 'https://index.docker.io/v1/') {
                            image = docker.build("${DOCKER_HUB_USER}/" + "${IMAGE_NAME}-" + "${ENVIRONMENT}:" 
                            + "${IMAGE_TAG}", '.')
                            image.push()
                        }
                    }
                }
            }
        }
        stage('Slack notification') {
            steps {
                slackSend channel: 'EduGPT', message: 'Ejecuci√≥n exitosa Pipeline Test!', teamDomain: 'edugptespacio', tokenCredentialId: 'slack'
            }
        }
    }
}
